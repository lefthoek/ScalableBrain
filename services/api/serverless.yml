service: scalable-brain-api
frameworkVersion: "2"
variablesResolutionMode: "20210326"
configValidationMode: error
useDotenv: true
plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-plugin-monorepo
custom:
  esbuild:
    loader:
      .graphql: text
  project_name: scalable-brain
  service_name: api
  raw_data_bucket: ${ssm:/${self:custom.project_name}/${opt:stage}/mine/buckets/raw_data}
  service_parameter_prefix: ${self:custom.project_name}/${opt:stage}/${self:custom.service_name}
  shared_parameter_prefix: ${self:custom.project_name}/prod/shared
  event_bus: ${ssm:/${self:custom.shared_parameter_prefix}/event_bus}
  auth_lookup_table: ${ssm:/${self:custom.shared_parameter_prefix}/tables/auth_lookup}
  slack_client_id: ${ssm:/${self:custom.service_parameter_prefix}/credentials/slack/client_id}
  slack_client_secret: ${ssm:/${self:custom.service_parameter_prefix}/credentials/slack/client_secret}
  websockets_api_id: ${ssm:/${self:custom.service_parameter_prefix}/websockets_api/id}
  function_prefix: ${self:custom.project_name}-${self:custom.service_name}-${opt:stage}
  oauth: ${self:custom.function_prefix}-oauth
  graphql: ${self:custom.function_prefix}-graphql
  websockets: ${self:custom.function_prefix}-websockets
  bridge: ${self:custom.function_prefix}-bridge
  function_role: ${ssm:/${self:custom.service_parameter_prefix}/roles/function}
  ws_connections_table: ${ssm:/${self:custom.service_parameter_prefix}/tables/websockets_connections}
  ws_subscriptions_table: ${ssm:/${self:custom.service_parameter_prefix}/tables/websockets_subscriptions}

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  apiGateway:
    websocketApiId: ${self:custom.websockets_api_id}
  eventBridge:
    useCloudFormation: true
  iam:
    role: ${self:custom.function_role}
  region: eu-west-1

functions:
  oauth:
    handler: src/index.slack
    events:
      - httpApi:
          path: /integrations/slack
          method: get
    environment:
      SLACK_CLIENT_ID: ${self:custom.slack_client_id}
      SLACK_CLIENT_SECRET: ${self:custom.slack_client_secret}
      AUTH_LOOKUP_TABLE: ${self:custom.auth_lookup_table}
      EVENT_BUS_NAME: ${self:custom.event_bus}
      HANDLER_NAME: ${self:custom.oauth}
  graphql:
    handler: src/index.graphql
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true
    environment:
      HANDLER_NAME: ${self:custom.graphql}
      TEAM_STORE: ${self:custom.raw_data_bucket}
  websockets:
    handler: src/index.websockets
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
      - websocket:
          route: $default
    environment:
      HANDLER_NAME: ${self:custom.websockets}
      WS_CONNECTIONS_TABLE: ${self:custom.ws_connections_table}
      WS_SUBSCRIPTIONS_TABLE: ${self:custom.ws_subscriptions_table}
  bridge:
    handler: src/index.bridge
    events:
      - eventBridge:
          eventBus: ${self:custom.event_bus}
          pattern:
            detail-type:
              - TEAM_AUTHENTICATED
              - TEAM_ADDED
    environment:
      HANDLER_NAME: ${self:custom.bridge}
      WS_CONNECTIONS_TABLE: ${self:custom.ws_connections_table}
      WS_SUBSCRIPTIONS_TABLE: ${self:custom.ws_subscriptions_table}
